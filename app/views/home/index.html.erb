<% content_for :head do %>
<style type="text/css">
    .iw_poi_title {color:#CC5522;font-size:14px;font-weight:bold;overflow:hidden;padding-right:13px;white-space:nowrap}
    .iw_poi_content {font:12px arial,sans-serif;overflow:visible;padding-top:4px;white-space:-moz-pre-wrap;word-wrap:break-word}
</style>
<script type="text/javascript" src="http://api.map.baidu.com/api?key=&v=1.1&services=true"></script>
<% end %>

<!--百度地图容器-->
<div style="width:697px;height:550px;border:#ccc solid 1px;float:left;" id="dituContent" class="span8"></div>

<% unless @signed_in %>
  <div id="sign_in" class="span4">
    <h2>Sign in</h2>
    <%=  %>
    <%= simple_form_for(@user, :as => resource_name, :url => session_path(resource_name), :html => {:class => 'form-vertical' }) do |f| %>
      <%= f.input :email, :label => false, :autofocus => true, :placeholder => t("app.sign_in.email_hint") %>
      <%= f.input :password, :label => false, :placeholder => t("app.sign_in.password_hint") %>
      <%= f.input :remember_me, :as => :boolean, :inline_label => t("app.remember_me"), :label => false if devise_mapping.rememberable? %>
      <%= f.button :submit, "Sign in", :class => 'btn-primary' %>
    <% end %>
    <%= render "devise/shared/links" %>
  </div>
<% else %>
  <div class="span4">
    <%= link_to t("app.attended_events"), root_path(:filter => 'attended'), :class => 'span3 btn btn-mini' %>
    <%= link_to t("app.followeds_events"), root_path(:filter => 'followed'), :class => 'span3 btn btn-mini' %>
    <table class="table table-condensed">
      <thead>
        <tr>
          <th>Event</th>
          <th>Host</th>
          <th>Location</th>
          <th>Time</th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
      <% @events.each do |event|%>
        <tr>
          <td>
            <% if event.is_a? ProvidedEvent %>
              <%= link_to event.name, provider_provided_event_path(event.owner_id, event) %>
            <% else %>
              <%= link_to event.name, user_personal_event_path(event.owner_id, event) %>
            <% end %>
          </td>
          <td>
            <% if event.is_a? ProvidedEvent %>
              <%= link_to event.host_name, provider_path(event.owner_id) %>
            <% else %>
              <%= link_to event.host_name, user_path(event.owner_id) %>
            <% end %>
          </td>
          <td><%= event.host_name %></td>
          <td><%= event.location %></td>
          <td><%= event.time %></td>
          <td></td>
          <% if event.attendees.include? current_user %>
            <td><%= link_to("Quit event", quit_event_path(event), :method => :post, :class => 'btn btn-mini') %></td>
          <% else %>
            <td><%= link_to("Attend event", attend_event_path(event), :method => :post, :class => 'btn btn-mini') %></td>
          <% end %>
        </tr>
      <% end %>
      </tbody>
    </table>
  </div>
<% end %>

<% content_for :map do %>
  <script type="text/javascript">
      //创建和初始化地图函数：
      function initMap(){
          createMap();//创建地图
          setMapEvent();//设置地图事件
          addMapControl();//向地图添加控件
          addMarker();//向地图中添加marker
          addRemark();//向地图中添加文字标注
      }
      
      //创建地图函数：
      function createMap(){
          var map = new BMap.Map("dituContent");//在百度地图容器中创建一个地图
          var point = new BMap.Point(121.459514,31.036121);//定义一个中心点坐标
          map.centerAndZoom(point,17);//设定地图的中心点和坐标并将地图显示在地图容器中
          window.map = map;//将map变量存储在全局
      }
      
      //地图事件设置函数：
      function setMapEvent(){
          map.enableDragging();//启用地图拖拽事件，默认启用(可不写)
          map.enableScrollWheelZoom();//启用地图滚轮放大缩小
          map.enableDoubleClickZoom();//启用鼠标双击放大，默认启用(可不写)
          map.enableKeyboard();//启用键盘上下左右键移动地图
      }
      
      //地图控件添加函数：
      function addMapControl(){
          //向地图中添加缩放控件
    var ctrl_nav = new BMap.NavigationControl({anchor:BMAP_ANCHOR_TOP_LEFT,type:BMAP_NAVIGATION_CONTROL_LARGE});
    map.addControl(ctrl_nav);
                  }
      
      //标注点数组
      var markerArr = [{title:"这里有活动",content:"通过参加活动来学习技能",point:"121.459433|31.03623",isOpen:0,icon:{w:21,h:21,l:46,t:46,x:1,lb:10}}
       ];
      //创建marker
      function addMarker(){
          for(var i=0;i<markerArr.length;i++){
              var json = markerArr[i];
              var p0 = json.point.split("|")[0];
              var p1 = json.point.split("|")[1];
              var point = new BMap.Point(p0,p1);
        var iconImg = createIcon(json.icon);
              var marker = new BMap.Marker(point,{icon:iconImg});
        var iw = createInfoWindow(i);
        var label = new BMap.Label(json.title,{"offset":new BMap.Size(json.icon.lb-json.icon.x+10,-20)});
        marker.setLabel(label);
              map.addOverlay(marker);
              label.setStyle({
                          borderColor:"#808080",
                          color:"#333",
                          cursor:"pointer"
              });
        
        (function(){
          var index = i;
          var _iw = createInfoWindow(i);
          var _marker = marker;
          _marker.addEventListener("click",function(){
              this.openInfoWindow(_iw);
            });
            _iw.addEventListener("open",function(){
              _marker.getLabel().hide();
            })
            _iw.addEventListener("close",function(){
              _marker.getLabel().show();
            })
          label.addEventListener("click",function(){
              _marker.openInfoWindow(_iw);
            })
          if(!!json.isOpen){
            label.hide();
            _marker.openInfoWindow(_iw);
          }
        })()
          }
      }
      //创建InfoWindow
      function createInfoWindow(i){
          var json = markerArr[i];
          var iw = new BMap.InfoWindow("<b class='iw_poi_title' title='" + json.title + "'>" + json.title + "</b><div class='iw_poi_content'>"+json.content+"</div>");
          return iw;
      }
      //创建一个Icon
      function createIcon(json){
          var icon = new BMap.Icon("http://app.baidu.com/map/images/us_mk_icon.png", new BMap.Size(json.w,json.h),{imageOffset: new BMap.Size(-json.l,-json.t),infoWindowOffset:new BMap.Size(json.lb+5,1),offset:new BMap.Size(json.x,json.h)})
          return icon;
      }
  //文字标注数组
      var lbPoints = [{point:"121.459756|31.035967",content:"活动和聚会能够在地图上显示"}
       ];
      //向地图中添加文字标注函数
      function addRemark(){
          for(var i=0;i<lbPoints.length;i++){
              var json = lbPoints[i];
              var p1 = json.point.split("|")[0];
              var p2 = json.point.split("|")[1];
              var label = new BMap.Label("<div style='padding:2px;'>"+json.content+"</div>",{point:new BMap.Point(p1,p2),offset:new BMap.Size(3,-6)});
              map.addOverlay(label);
              label.setStyle({borderColor:"#999"});
          }
      }
      
      initMap();//创建和初始化地图
  </script>
<% end %>